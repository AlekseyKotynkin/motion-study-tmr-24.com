apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
//
android {

    signingConfigs {
        tmr24client_key_auto {
            storeFile file('C:\\Users\\tmr24com\\tmr24client_key.jks')
            storePassword 'Zaqwsx12'
            keyPassword 'Zaqwsx12'
            keyAlias 'tmr24client_key'
        }
    }
    compileSdkVersion 32
    buildToolsVersion '30.0.3'


    defaultConfig {
        applicationId "com.TMR24.MotionStudy"
        minSdkVersion 22
        targetSdkVersion 32
        multiDexEnabled true
        versionCode 3
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationIdSuffix kotlin_version
        versionNameSuffix kotlin_version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.tmr24client_key_auto
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility "1.8"
        targetCompatibility "1.8"
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    ndkVersion '21.3.6528147'

    buildFeatures {
        viewBinding true
    }
}


dependencies {
    implementation platform ('com.google.firebase:firebase-bom:26.2.0')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.google.firebase:firebase-analytics:20.0.1"
    implementation "com.google.firebase:firebase-auth:21.0.1"
    implementation "com.google.firebase:firebase-storage:20.0.0"
    implementation "com.google.firebase:firebase-firestore:24.0.0"
    implementation "com.google.firebase:firebase-functions:20.0.1"
    implementation "com.google.android.gms:play-services-auth:20.0.0"
    implementation "com.google.android.material:material:1.4.0"
    implementation "com.google.android.gms:play-services-location:19.0.0"
    implementation "androidx.arch.core:core-common:2.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    def work_version = "2.7.1"

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"

    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // optional - Multiprocessor support
    implementation "androidx.work:work-multiprocess:$work_version"

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.1.0-alpha11"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha31"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha31"

    def core_version = "1.7.0"
    // Java language implementation
    implementation "androidx.core:core:$core_version"
    // Kotlin
    implementation "androidx.core:core-ktx:$core_version"

    // To use RoleManagerCompat
    implementation 'androidx.core:core-role:1.1.0-alpha01'

    // To use the Animator APIs
    implementation "androidx.core:core-animation:1.0.0-alpha02"
    // To test the Animator APIs
    androidTestImplementation "androidx.core:core-animation-testing:1.0.0-alpha02"

    def appcompat_version = "1.4.0"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    // For loading and tinting drawables on older versions of the platform
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"

    def lifecycle_version = "2.4.0"
    def arch_version = "2.1.0"

    // ViewModel
    //implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    //implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    //implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    // annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    //implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"


    // optional - ReactiveStreams support for LiveData
    //implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'


}
